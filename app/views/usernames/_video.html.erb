<script type="text/javascript">
  
$(document).ready(function(){
    $('[data-toggle="popover"]').popover({
        placement : 'top',
        trigger : 'hover',
        html : true,
        content : '<div class="media"><img src="<%= album_img(@song) %>" class="mr-3" alt="Album Cover"><div class="media-body"></div> <%=album_name(@song)%> , Released: <%= album_release_date(@song) %>"</div>'
    });
}); 



</script>



<div class="embed-responsive embed-responsive-4by3">
  <div class="embed-responsive-item" id="player">
          
          <script type="text/javascript">
           $(document).ready(function() {
            function loadPlayer(id, user_id, song, spotify_link) { 
                     
          UserId = user_id

          if (typeof(YT) == 'undefined' || typeof(YT.Player) == 'undefined') {

            var tag = document.createElement('script');
            tag.src = "https://www.youtube.com/iframe_api";
            var firstScriptTag = document.getElementsByTagName('script')[0];
            firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);
        
           
            window.onYouTubePlayerAPIReady = function(id) {
              onYouTubePlayer(id);
              PageTitle(song);

            };






          } else {
            
           onYouTubePlayer(id)
            PageTitle(song);
          }
        }

      function initialize(){
        console.log('inside initialize')
    // Update the controls on load
    updateTimerDisplay();
    updateProgressBar();


    // Clear any old interval.
    clearInterval(time_update_interval);

    // Start interval to update elapsed time display and
    // the elapsed part of the progress bar every second.
    time_update_interval = setInterval(function () {
        updateTimerDisplay();
        updateProgressBar();
    }, 1000)

}  

      // This function is called by initialize()
      function updateTimerDisplay(){
        console.log('inside timer display')
          // Update current time text display.
          $('#current-time').text(formatTime( player.getCurrentTime() ));
          $('#duration').text(formatTime( player.getDuration() ));

      }

      function formatTime(time){
        console.log('inside Time II')
          time = Math.round(time);

          var minutes = Math.floor(time / 60),
          seconds = time - minutes * 60;
          console.log(minutes)

          seconds = seconds < 10 ? '0' + seconds : seconds;

          return minutes + ":" + seconds;
      }

            $('#progress-bar').on('mouseup touchend', function (e) {

          // Calculate the new time for the video.
          // new time in seconds = total duration in seconds * ( value of range input / 100 )
          var newTime = player.getDuration() * (e.target.value / 100);

          // Skip video to new time.
          player.seekTo(newTime);

      });

            // This function is called by initialize()
      function updateProgressBar(){
          // Update the value of our progress bar accordingly.
          $('#progress-bar').val((player.getCurrentTime() / player.getDuration()) * 100);
      }      


      // Playback

      $('#play').on('click', function () {
          player.playVideo();
      });


      $('#pause').on('click', function () {
          player.pauseVideo();
      });


      function PageTitle(song) {

        document.title = song
      };

            // 3. This function creates an <iframe> (and YouTube player)
            //    after the API code downloads.
            var player;
            time_update_interval = 0;
            function onYouTubePlayer(id) {
              player = new YT.Player('player', {
                height: '24px',
                width: '550',
                videoId: '<%= video_id(@song)%>',
                playerVars: { 'autoplay': 1, 
                              'controls': 0 , 
                              'autohide': 1,

                               },

                events: {
                  'onReady': onPlayerReady,
                  'onReady': initialize,
                  'onStateChange': onPlayerStateChange,
                  'onError': onError

                }
              });
            }

            console.log('<%= video_id(@song)%>')
        loadPlayer('<%= video_id(@song)%>', '<%= @user.id %>' , '<%= @song %>', '<%= spotify_link(@song) %>' );
      });
        </script>
    
  </div>
</div>
<div class="control-panel">
  <p>
    <span id="current-time"></span>/
    <span id="duration"></span>
  </p>       
    <p>
      <span id="play" class="glyphicon glyphicon-play"></span>
      <span id="pause" class="glyphicon glyphicon-stop"></span></p>    
    </p>
  

  <input type="range" id="progress-bar" value="0">

  <a class="btn btn-primary" href="<%= spotify_link(@song) %>">Play on Spotify </a> 
  <button type="button" class="btn btn-primary" data-toggle="popover"> Album info </button>
</div>
 
 
      <%= link_to "Switch Username", new_username_path , :class => "btn btn-primary back-button", :id => 'Another search' %> 
      <%= link_to "Shuffle", shuttle_path(:username => @user, :current_song => @song) , remote:true , :class => "btn btn-primary shuffle" %> 
</div>  	



